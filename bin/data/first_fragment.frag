#version 410

/*
  버텍스 셰이더에서 out 키워드로
  전송해 준 fragCol 변수에 담긴 데이터를
  프래그먼트 셰이더에서 받으려면, 동일한 변수명을
  in 키워드로 선언해야 함.

  이렇게 버텍스 셰이더와 프래그먼트 셰이더 양측에서
  in/out 을 사용함으로써
  varying 변수를 사용하는 것과 동일한 효과를 볼 수 있음.
*/
// in vec4 fragCol;

/*
  하나의 색상만을 사용해서 삼각형의 픽셀들을 색칠해줄 것이므로,
  더 이상 위에서 처럼 이전 파이프라인인 버텍스셰이더에서 in 키워드로 보간된 색상값을 받아오지 않아도 됨.

  대신 uniform 변수를 하나 만들어서, 
  오픈프레임웍스의 ofShader.setUniform4f() 함수가 지정해주는 값을 
  받아와서 모든 파이프라인과 픽셀들에 동일한 변수값으로 사용할 것임.

  더 이상 무지개 삼각형을 그리지 않을 거니까
  왜냐? 한 프레임 내에서 삼각형 메쉬의 모든 픽셀들을 다 동일한 색상으로 칠해줘도 되기 때문임!
*/
uniform vec4 uniCol;

/*
  지금 out 키워드를 사용해서
  프래그먼트 셰이더의 다음 파이프라인 단계에 쏴줄 데이터를 담을 변수를 선언하고 있음.

  근데 원래 프래그먼트 셰이더에서 최종 계산된 색상값을 할당할 때
  gl_FragColor 를 사용하지 않았나?

  -> 구버전 OpenGL 에서는 이 변수를 계속 유지해줬음.
  그러나, 최근들어 셰이더 개발자에게 더 많은 유연성을 제공하기 위해,
  gl_FragColor 는 deprecated 로 없애버리고, 대신 out 키워드를 사용하여
  다음 파이프라인 단계로 보내줄 색상데이터를 지정할 수 있도록 함. -> p.56 참고

  정확히는 GLSL 4.40 버전부터 deprecated 되었다고 함.
  스택오버플로우에 올라온 관련 내용 북마크 해놓았으니 참고할 것.
*/
out vec4 outColor;

void main(){
  // outColor = vec4(1.0, 0.0, 0.0, 1.0);
  // outColor = fragCol;
  outColor = uniCol; // 이제 삼각형의 모든 픽셀들은 동일한 유니폼 변수에 할당된 색상값으로 칠해질거임.
}